(module
  (import "env" "require_auth" (func $require_auth (param i64)))
  (import "env" "eosio_assert" (func $eosio_assert (param i32 i32)))
   (table 0 anyfunc)
   (memory $0 1)
   (data (i32.const 20) "1")
   (data (i32.const 24) "2")
   (data (i32.const 28) "3")
   (data (i32.const 32) "4")
   (data (i32.const 36) "5")
   (data (i32.const 40) "6")
   (data (i32.const 44) "7")
   (data (i32.const 48) "8")
   (data (i32.const 52) "9")
   (data (i32.const 56) "10")
   (data (i32.const 60) "11")
   (data (i32.const 64) "12")
   (data (i32.const 68) "13")
   (data (i32.const 72) "14")
   (data (i32.const 76) "15")
   (data (i32.const 80) "16")
   (data (i32.const 84) "17")
   (data (i32.const 88) "18")
   (data (i32.const 92) "19")
   (data (i32.const 96) "20")
   (data (i32.const 100) "21")
   (data (i32.const 104) "22")
   (data (i32.const 108) "23")
   (data (i32.const 112) "24")
   (data (i32.const 116) "25")
   (data (i32.const 120) "26")
   (data (i32.const 124) "27")
   (data (i32.const 128) "28")
   (data (i32.const 132) "29")
   (data (i32.const 136) "30")
   (data (i32.const 140) "31")
   (data (i32.const 144) "32")
   (data (i32.const 148) "33")
   (data (i32.const 152) "34")
   (data (i32.const 156) "35")
   (data (i32.const 160) "36")
   (data (i32.const 164) "37")
   (data (i32.const 168) "38")
   (data (i32.const 172) "39")
   (data (i32.const 176) "40")
   (data (i32.const 180) "41")
   (data (i32.const 184) "42")
   (data (i32.const 188) "43")
   (data (i32.const 192) "44")
   (data (i32.const 196) "45")
   (data (i32.const 200) "46")
   (export "add" (func $add))   
   (export "sub" (func $sub))
   (export "mul" (func $mul))   
   (export "div" (func $div))
   (export "sqrt" (func $sqrt))   
   (export "min" (func $min))
   (export "max" (func $max))
   (export "ceil" (func $ceil))
   (export "floor" (func $floor))
   (export "trunc" (func $trunc))
   (export "nearest" (func $nearest))
   (export "is_nanf" (func $is_nanf))
   (export "apply" (func $apply))
   (export "assert_return" (func $assert_return))
   (export "assert_return_nan" (func $assert_return_nan))
   (func $assert_return (param $0 f32) (param $1 f32 ) (param $2 i32) (call $eosio_assert(i32.eq (i32.reinterpret/f32 (get_local $0)) (i32.reinterpret/f32 (get_local $1))) (get_local $2)))
   (func $is_nanf (param $0 f32) (result i32)
    (i32.gt_u
     (i32.and
      (i32.reinterpret/f32
       (get_local $0)
      )
      (i32.const 2147483647)
     )
     (i32.const 2139095040)
    )
   )
   (func $assert_return_nan (param $0 f32) (param $1 i32)( call $eosio_assert (call $is_nanf (get_local $0)) (get_local $1)))
   (func $add (param $0 f32) (param $1 f32) (result f32) (f32.add (get_local $0) (get_local $1)))
   (func $sub (param $0 f32) (param $1 f32) (result f32) (f32.sub (get_local $0) (get_local $1)))
   (func $mul (param $0 f32) (param $1 f32) (result f32) (f32.mul (get_local $0) (get_local $1)))
   (func $div (param $0 f32) (param $1 f32) (result f32) (f32.div (get_local $0) (get_local $1)))
   (func $sqrt (param $0 f32) (result f32) (f32.sqrt (get_local $0)))
   (func $min (param $0 f32) (param $1 f32) (result f32) (f32.min (get_local $0) (get_local $1)))
   (func $max (param $0 f32) (param $1 f32) (result f32) (f32.max (get_local $0) (get_local $1)))
   (func $ceil (param $0 f32) (result f32) (f32.ceil (get_local $0)))
   (func $floor (param $0 f32) (result f32) (f32.floor (get_local $0)))
   (func $trunc (param $0 f32) (result f32) (f32.trunc (get_local $0)))
   (func $nearest (param $0 f32) (result f32) (f32.nearest (get_local $0)))
   (func $fge (param $0 f32) (param $1 f32) (result i32) (f32.ge (get_local $0) (get_local $1)))
   (func $apply (param $0 i64)(param $1 i64)(param $2 i64)
   (call $require_auth (i64.const 6396251299783901184))
   (call $assert_return_nan (call $min (f32.const -inf) (f32.const -nan)) (i32.const 20))
   (call $assert_return_nan (call $min (f32.const -inf) (f32.const -nan:0x200000)) (i32.const 24))
   (call $assert_return_nan (call $min (f32.const -inf) (f32.const nan)) (i32.const 28))
   (call $assert_return_nan (call $min (f32.const -inf) (f32.const nan:0x200000)) (i32.const 32))
   (call $assert_return_nan (call $min (f32.const inf) (f32.const -nan)) (i32.const 36))
   (call $assert_return_nan (call $min (f32.const inf) (f32.const -nan:0x200000)) (i32.const 40))
   (call $assert_return_nan (call $min (f32.const inf) (f32.const nan)) (i32.const 44))
   (call $assert_return_nan (call $min (f32.const inf) (f32.const nan:0x200000)) (i32.const 48))
   (call $assert_return_nan (call $min (f32.const -nan) (f32.const -inf)) (i32.const 52))
   (call $assert_return_nan (call $min (f32.const -nan:0x200000) (f32.const -inf)) (i32.const 56))
   (call $assert_return_nan (call $min (f32.const -nan) (f32.const inf)) (i32.const 60))
   (call $assert_return_nan (call $min (f32.const -nan:0x200000) (f32.const inf)) (i32.const 64))
   (call $assert_return_nan (call $min (f32.const nan) (f32.const -inf)) (i32.const 68))
   (call $assert_return_nan (call $min (f32.const nan:0x200000) (f32.const -inf)) (i32.const 72))
   (call $assert_return_nan (call $min (f32.const nan) (f32.const inf)) (i32.const 76))
   (call $assert_return_nan (call $min (f32.const nan:0x200000) (f32.const inf)) (i32.const 80))
   (call $assert_return_nan (call $max (f32.const inf) (f32.const -nan)) (i32.const 84))
   (call $assert_return_nan (call $max (f32.const inf) (f32.const -nan:0x200000)) (i32.const 88))
   (call $assert_return_nan (call $max (f32.const inf) (f32.const nan)) (i32.const 92))
   (call $assert_return_nan (call $max (f32.const inf) (f32.const nan:0x200000)) (i32.const 96))
   (call $assert_return_nan (call $max (f32.const -nan) (f32.const inf)) (i32.const 100))
   (call $assert_return_nan (call $max (f32.const -nan:0x200000) (f32.const inf)) (i32.const 104))
   (call $assert_return_nan (call $max (f32.const nan) (f32.const -inf)) (i32.const 108))
   (call $assert_return_nan (call $max (f32.const nan:0x200000) (f32.const -inf)) (i32.const 112))
   (call $assert_return_nan (call $max (f32.const nan) (f32.const inf)) (i32.const 116))
   (call $assert_return_nan (call $max (f32.const nan:0x200000) (f32.const inf)) (i32.const 120)) 
   (call $assert_return (call $nearest (f32.const -0x0p+0)) (f32.const -0x0p+0) (i32.const 124))
   (call $assert_return (call $nearest (f32.const 0x0p+0)) (f32.const 0x0p+0) (i32.const 128))
   (call $assert_return (call $nearest (f32.const -0x1p-149)) (f32.const -0x0p+0) (i32.const 132))
   (call $assert_return (call $nearest (f32.const 0x1p-149)) (f32.const 0x0p+0) (i32.const 136))
   (call $assert_return (call $nearest (f32.const -0x1p-126)) (f32.const -0x0p+0) (i32.const 140))
   (call $assert_return (call $nearest (f32.const 0x1p-126)) (f32.const 0x0p+0) (i32.const 144))
   (call $assert_return (call $nearest (f32.const -0x1p-1)) (f32.const -0x0p+0) (i32.const 148))
   (call $assert_return (call $nearest (f32.const 0x1p-1)) (f32.const 0x0p+0) (i32.const 152))
   (call $assert_return (call $nearest (f32.const -0x1p+0)) (f32.const -0x1p+0) (i32.const 156))
   (call $assert_return (call $nearest (f32.const 0x1p+0)) (f32.const 0x1p+0) (i32.const 160))
   (call $assert_return (call $nearest (f32.const -0x1.921fb6p+2)) (f32.const -0x1.8p+2) (i32.const 164))
   (call $assert_return (call $nearest (f32.const 0x1.921fb6p+2)) (f32.const 0x1.8p+2) (i32.const 168))
   (call $assert_return (call $nearest (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127) (i32.const 172))
   (call $assert_return (call $nearest (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127) (i32.const 176))
   (call $assert_return (call $nearest (f32.const -inf)) (f32.const -inf) (i32.const 180))
   (call $assert_return (call $nearest (f32.const inf)) (f32.const inf) (i32.const 184))
   (call $assert_return_nan (call $nearest (f32.const -nan)) (i32.const 188))
   (call $assert_return_nan (call $nearest (f32.const -nan:0x200000)) (i32.const 192))
   (call $assert_return_nan (call $nearest (f32.const nan)) (i32.const 196))
   (call $assert_return_nan (call $nearest (f32.const nan:0x200000)) (i32.const 200)) 
))