package main

import (
	"encoding/json"
	"fmt"
	"github.com/expdecode/p2p"
	"github.com/expdecode/rlp"
	"reflect"
)

func main() {
	// rlp.Debug = true
	fmt.Println("开始")
	// Ver := &p2p.SignedBlock{}
	Ver := &p2p.HandshakeMessage{}

	data := []byte{182, 4, 172, 163, 118, 242, 6, 184, 252, 37, 166, 237, 68, 219, 220, 102, 84, 124, 54, 198, 195, 62, 58, 17, 159, 251, 234, 239, 148, 54, 66, 240, 233, 6, 129, 41, 223, 182, 141, 20, 177, 150, 129, 11, 241, 60, 250, 118, 143, 215, 28, 128, 222, 204, 32, 150, 235, 22, 60, 16, 175, 104, 112, 72, 186, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 208, 232, 125, 19, 192, 74, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 112, 101, 101, 114, 105, 110, 103, 46, 109, 97, 105, 110, 110, 101, 116, 46, 101, 111, 115, 99, 97, 110, 97, 100, 97, 46, 99, 111, 109, 58, 57, 56, 55, 54, 32, 45, 32, 56, 49, 50, 57, 100, 102, 98, 108, 21, 169, 0, 0, 169, 21, 108, 178, 83, 91, 152, 211, 232, 255, 166, 158, 101, 108, 220, 101, 230, 245, 205, 221, 94, 167, 251, 162, 112, 108, 59, 14, 172, 69, 170, 178, 22, 169, 0, 0, 169, 22, 178, 240, 1, 209, 140, 219, 145, 220, 199, 41, 219, 187, 145, 132, 36, 244, 223, 20, 252, 135, 183, 101, 48, 205, 65, 78, 66, 118, 230, 5, 108, 105, 110, 117, 120, 15, 69, 79, 83, 32, 67, 97, 110, 97, 100, 97, 32, 45, 32, 73, 110, 1, 0}

	// data := []byte{209, 235, 89, 69, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 172, 163, 118, 242, 6, 184, 252, 37, 166, 237, 68, 219, 220, 102, 84, 124, 54, 198, 195, 62, 58, 17, 159, 251, 234, 239, 148, 54, 66, 240, 233, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
	err := rlp.DecodeBytes(data, Ver)
	if err != nil {
		fmt.Println(err)
	}
	fmt.Printf("%v\n", Ver)
	aa, _ := json.Marshal(Ver)
	fmt.Println(string(aa))

	fmt.Println("*****************************")
	storage, err := rlp.EncodeToBytes(Ver)
	fmt.Println(storage)

	var gg byte
	gg = 10
	a := reflect.ValueOf(gg)
	b := reflect.TypeOf(gg).String()
	fmt.Println(a, b)
}
